services:
  events:
    image: "ghcr.io/beingflo/events:0.1.0"
    container_name: events
    env_file: "service/.env.prod"
    restart: unless-stopped
    networks:
      - caddy_net
      - events_net

  clickhouse:
    image: "clickhouse/clickhouse-server:25.6"
    container_name: clickhouse
    volumes:
      - clickhouse-db:/var/lib/clickhouse
    env_file: ".env.prod"
    networks:
      - events_net
    ports:
      - 8123:8123
      - 9000:9000
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8123/ping",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    container_name: otel-collector
    env_file: ".env.prod"
    configs:
      - source: otel-config
        target: /etc/otel-collector-config.yaml
    ports:
      - 4317:4317
      - 4318:4318
      - 55679:55679
    command: ["--config=/etc/otel-collector-config.yaml"]
    restart: unless-stopped
    networks:
      - events_net
      - caddy_net
    depends_on:
      clickhouse:
        condition: service_healthy

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file: ".env.prod"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - events_net
      - caddy_net
    depends_on:
      clickhouse:
        condition: service_healthy

volumes:
  clickhouse-db:
    name: "clickhouse-db"
  grafana-data:
    name: "grafana-data"

networks:
  events_net:
    name: "events_net"
  caddy_net:
    external: true

configs:
  otel-config:
    content: |
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318

      processors:
        batch:

      exporters:
        clickhouse:
          endpoint: tcp://clickhouse:9000
          database: events
          username: ${CLICKHOUSE_USER}
          password: ${CLICKHOUSE_PASSWORD}
          ttl: 72h
          create_schema: true
          timeout: 5s
          retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_interval: 30s
            max_elapsed_time: 300s

      extensions:
        health_check:
          endpoint: 0.0.0.0:55679

      service:
        extensions: [health_check]
        pipelines:
          traces:
            receivers: [otlp]
            processors: [batch]
            exporters: [clickhouse]
